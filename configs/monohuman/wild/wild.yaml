task: 'wild'
subject: 'wild'
experiment: 'monohuman'

ddp: False

trainer_module: 'core.train.trainers.monohuman.trainer'
network_module: 'core.nets.monohuman.network'


index_a: 117
index_b: 49

resize_img_scale: 1.

debug: False
##############################################3
## Data Configuration

train:
  dataset_module: 'core.data.monohuman.monodata'
  dataset: 'monocular_wild_train'
  perturb: 1.        # only for training, set to 0. for no jitter, 1. for jitter
  batch_size: 1
  shuffle: True
  drop_last: False
  maxiter: 400000
  lr: 0.0005  # 5e-4
  lr_mweight_vol_decoder: 0.000005 # 5e-6
  lr_pose_decoder: 0.00005        # 5e-5
  lr_non_rigid_mlp: 0.00005       # 5e-5
  lr_compress_fc: 0.0005
  lr_forward_mlp: 0.00005 
  lr_backward_mlp: 0.00005 
  lrate_decay: 500
  optimizer: 'adam'
  log_interval: 20
  save_checkpt_interval: 2000
  save_model_interval: 50000
  ray_shoot_mode: 'patch'
  lossweights:
    lpips: 1.0
    mse: 0.2


blend_net:
  module: 'core.nets.monohuman.blend.mlp_network'

feature_extractor:
  module: 'core.nets.monohuman.feature_extract.feature_extractor'

projector:
  module: 'core.nets.monohuman.projector.projector'

progress:
  dataset_module: 'core.data.monohuman.monodata'
  dataset: 'monocular_wild_test'

movement:
  dataset_module: 'core.data.monohuman.monodata'
  dataset: 'monocular_wild_test'

freeview:
  dataset_module: 'core.data.monohuman.freeview'
  dataset: 'monocular_wild_test'

tpose:
  dataset_module: 'core.data.monohuman.tpose'
  dataset: 'monocular_wild_test'

bgcolor: [255., 255., 255.]


non_rigid_motion_mlp:
  module: 'core.nets.monohuman.non_rigid_motion_mlps.mlp_offset'
  condition_code_size: 69
  mlp_width: 128
  mlp_depth: 6
  skips: [4]
  multires: 6       # log2 of max freq for positional encoding (3D location)
  i_embed: 0        # set 0 for default positional encoding, -1 for none
  kick_in_iter: 5000
  #kick_in_iter: 0
  full_band_iter: 500000

# # reduce the size of patch from 32x32 to 20x20 to fit in a single gpu
patch:
  sample_subject_ratio: 1.
  N_patches: 4
  size: 20      # [Patch] size of patch
fg_thread: 0.3
netchunk_per_gpu: 50000 # number of pts sent through network in parallel, decrease if running out of memory
chunk: 32768   # 32768=1024*32, number of rays processed in parallel, decrease if running out of memory
n_gpus: 1